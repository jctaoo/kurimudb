import{o as n,c as s,i as a}from"./app.f0c10aae.js";const p='{"title":"Dexie","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装"},{"level":2,"title":"版本控制","slug":"版本控制"},{"level":2,"title":"示例","slug":"示例"},{"level":2,"title":"查询构造器","slug":"查询构造器"},{"level":2,"title":"包装查询结果","slug":"包装查询结果"},{"level":2,"title":"包装单个结果","slug":"包装单个结果"},{"level":2,"title":"深入了解 Dexie.js","slug":"深入了解-dexie-js"}],"relativePath":"drivers/dexie.md","lastUpdated":1620276065328}',t={},e=a('<h1 id="dexie"><a class="header-anchor" href="#dexie" aria-hidden="true">#</a> Dexie</h1><div class="tip custom-block"><p class="custom-block-title">注意事项</p><p><a href="https://dexie.org/" target="_blank" rel="noopener noreferrer">Dexie.js</a> 是一个优雅的、链式语法的 IndexedDB 的包装器，Github 上搜索 IndexedDB，它在结果中排名第一。</p><p>IndexedDB 是 Web 数据库，它的容量和<a href="https://web.dev/storage-for-the-web/#how-much" target="_blank" rel="noopener noreferrer">用户硬盘大小有关</a>，可以直接存储部分 JavaScript 对象。注意，和 LocalStorage 不同的是， <strong>IndexedDB 是异步的。</strong></p></div><h2 id="安装"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash line-numbers-mode"><pre><code><span class="token comment"># 安装 Dexie 本体</span>\n<span class="token function">npm</span> i dexie@3\n<span class="token comment"># 安装 Kurimudb 的 Dexie 驱动</span>\n<span class="token function">npm</span> i kurimudb-driver-dexie@3\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="版本控制"><a class="header-anchor" href="#版本控制" aria-hidden="true">#</a> 版本控制</h2><p>Dexie 驱动在使用前，需要先声明数据库的版本，推荐阅读 <a href="https://dexie.org/docs/Tutorial/Design#database-versioning" target="_blank" rel="noopener noreferrer">Dexie 官方文档</a>，下方是一个例子：</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// 创建一个 /models/migrations/index.js 文件</span>\n\n<span class="token keyword">import</span> Dexie <span class="token keyword">from</span> <span class="token string">&quot;dexie&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dexie</span><span class="token punctuation">(</span><span class="token string">&quot;kurimudb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndb<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 一个表对应一个模型，需和模型名一致。模型的主键名称默认为 _id，所以表也需要将主键设置为 _id</span>\n  indexedDbState<span class="token operator">:</span> <span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span>\n  <span class="token comment">// ++id 代表主键是自增的</span>\n  indexedDbList<span class="token operator">:</span> <span class="token string">&quot;++_id&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndb<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stores</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  _seed<span class="token operator">:</span> <span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 为了使 kurimudb 的填充功能正常工作，必须创建此表</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> db<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><em>版本的顺序是不重要的，Dexie.js 会在迁移不同版本时，自动对版本进行排序。所以，你可以把新的版本写在上面，避免未来版本过多时，降低代码可读性。</em></p><h2 id="示例"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><div class="highlighted"> </div><div class="highlighted"> </div><br><br><div class="highlighted"> </div><br><br><br><br><br><div class="highlighted"> </div><br><br><br><br><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Models <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DexieDriver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-driver-dexie&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> migrations <span class="token keyword">from</span> <span class="token string">&quot;../models/migrations&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">IndexedDbState</span> <span class="token keyword">extends</span> <span class="token class-name">Models<span class="token punctuation">.</span>keyValue</span> <span class="token punctuation">{</span>\n  db <span class="token operator">=</span> migrations<span class="token punctuation">;</span> <span class="token comment">// 将你声明好版本的 Dexie 实例，挂载在模型的 db 属性中，驱动会自动使用它</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;indexedDbState&quot;</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>\n      driver<span class="token operator">:</span> DexieDriver<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">IndexedDbState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>由于 IndexedDB 的 Api 是异步的，因此使用了 Dexie 驱动的模型，和读有关的 Api 将返回 <code>Promise</code> 对象。你可以在其前加上 <code>await</code> 关键字以等待其返回结果。</p><div class="language-js line-numbers-mode"><pre><code>indexedDbState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 创建或更新..</span>\n<span class="token keyword">const</span> say <span class="token operator">=</span> <span class="token keyword">await</span> indexedDbState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 读取，由于 IndexedDB 是异步的，所以需要加 await..</span>\n<span class="token keyword">delete</span> indexedDbState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 删除..</span>\n<span class="token keyword">await</span> indexedDbState<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 判断是否存在..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="查询构造器"><a class="header-anchor" href="#查询构造器" aria-hidden="true">#</a> 查询构造器</h2><p>允许从一组数据中高效率地查询，是 IndexedDB 的特色之一。我们可以通过 <a href="https://dexie.org/docs/Table/Table" target="_blank" rel="noopener noreferrer">Dexie</a> 以链式调用的语法，来编写查询条件：</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// 查询 id 小于 5 的便签</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span>\n  noteList<span class="token punctuation">.</span>storage\n    <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// query 函数会返回一个此模型的 [Dexie Table 对象](https://dexie.org/docs/Table/Table)</span>\n    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">below</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="包装查询结果"><a class="header-anchor" href="#包装查询结果" aria-hidden="true">#</a> 包装查询结果</h2><p><code>noteList.storage.getResults()</code> 函数会对 Dexie 查询出的结果 (<code>Promise&lt;Array&lt;any&gt;&gt;</code>) 进行包装，<strong>同时数据也会被缓存到缓存层</strong>。默认包装成对象，对象的键为值的主键。如果你需要数组，则可以向第二个参数传入一个空数组 <code>[]</code>：</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br></div><pre><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span>\n  noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">below</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>你也可以传入非空的数组或对象，查询出的结果会在原来的数据末尾追加：</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted"> </div><br><br><br></div><pre><code><span class="token keyword">await</span> noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span>\n  noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">below</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">await</span> noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span>\n  noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">below</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> hello<span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>或者调用 <code>getArrayResults()</code> 和 <code>getObjectResults()</code> 也行：</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">await</span> noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getObjectResults</span><span class="token punctuation">(</span>noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">await</span> noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getArrayResults</span><span class="token punctuation">(</span>noteList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="包装单个结果"><a class="header-anchor" href="#包装单个结果" aria-hidden="true">#</a> 包装单个结果</h2><p>如果 Dexie.js 的查询结果只会有一个 (如 <code>first</code> 函数)，那么请用 <code>getResult</code> 函数：</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">await</span> userList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span>\n  userList<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;akirarika&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="深入了解-dexie-js"><a class="header-anchor" href="#深入了解-dexie-js" aria-hidden="true">#</a> 深入了解 Dexie.js</h2><p>Dexie.js 的功能非常丰富，强烈推荐阅读 <a href="https://dexie.org/docs/API-Reference" target="_blank" rel="noopener noreferrer">Dexie 文档</a> 和 <a href="https://dexie.org/docs/Tutorial/Best-Practices#1-understand-promises" target="_blank" rel="noopener noreferrer">Dexie 最佳实践</a>！</p>',27);t.render=function(a,p,t,o,c,l){return n(),s("div",null,[e])};export default t;export{p as __pageData};
